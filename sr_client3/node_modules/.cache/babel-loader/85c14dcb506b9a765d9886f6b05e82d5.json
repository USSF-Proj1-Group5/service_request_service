{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/src/app/src/App.js\";\nimport React from 'react';\nimport AddSR from './AddSR';\nimport ListSR from './ListSR';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCurrentSRName = e => {\n      this.setState({\n        currentSR_name: e.target.value\n      });\n    };\n\n    this.handleCurrentTaskID = e => {\n      this.setState({\n        currentSR_task: e.target.value\n      });\n    };\n\n    this.handleCurrentCtr = e => {\n      this.setState({\n        currentSR_contractor: e.target.value\n      });\n    };\n\n    this.addSR = body => {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      };\n      fetch('http://localhost:3001/add_service_request', requestOptions).then(response => response.json()).then(response => alert(response.message));\n    };\n\n    this.handleDeleteSR = e => {\n      let deleteSR = {\n        id: e.target.value\n      };\n    };\n\n    this.deleteSR = body => {\n      const requestOptions = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      };\n      fetch('http://localhost:3001/delete_service_request', requestOptions).then(response => response.json()).then(response => alert(response.message));\n    };\n\n    this.state = {\n      currentSR_name: '',\n      currentSR_task: '',\n      currentSR_contractor: '',\n      listSR: []\n    };\n  }\n\n  async componentDidMount() {\n    const originalSRList = await this.getSRList();\n    this.setState({\n      listSR: this.state.listSR.concat(originalSRList)\n    });\n  }\n\n  async getSRList() {\n    const response = await fetch('http://localhost:3001/service_requests');\n    const json = await response.json();\n    return json;\n  }\n\n  async handleAddSR(e) {\n    let addSR = {\n      sr_name: this.state.currentSR_name,\n      sr_task: this.state.currentSR_task,\n      sr_contractor: this.state.currentSR_contractor\n    };\n    this.addSR(addSR);\n    const newList = await this.getSRList();\n    this.setState({\n      listSR: newList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Service Requests Service \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddSR, {\n        handleCurrentSRName: this.handleCurrentSRName,\n        handleCurrentTaskID: this.handleCurrentTaskID,\n        handleCurrentCtr: this.handleCurrentCtr,\n        handleAddSR: this.handleAddSR.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListSR, {\n        listSR: this.state.listSR,\n        handleDeleteSR: this.handleDeleteSR\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/src/app/src/App.js"],"names":["React","AddSR","ListSR","App","Component","constructor","props","handleCurrentSRName","e","setState","currentSR_name","target","value","handleCurrentTaskID","currentSR_task","handleCurrentCtr","currentSR_contractor","addSR","body","requestOptions","method","headers","JSON","stringify","fetch","then","response","json","alert","message","handleDeleteSR","deleteSR","id","state","listSR","componentDidMount","originalSRList","getSRList","concat","handleAddSR","sr_name","sr_task","sr_contractor","newList","render","bind"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AddSR from './AddSR'\nimport ListSR from './ListSR'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      currentSR_name: '',\n      currentSR_task: '',\n      currentSR_contractor: '',\n      listSR: []\n    }\n  }\n\n  async componentDidMount() {\n    const originalSRList = await this.getSRList();\n    this.setState({ listSR: this.state.listSR.concat(originalSRList) });\n\n}\n  async getSRList() {\n    const response = await fetch('http://localhost:3001/service_requests');\n    const json = await response.json();\n    return json;\n  }\n  \n  handleCurrentSRName = (e) => {\n    this.setState({currentSR_name: e.target.value})\n  }\n  handleCurrentTaskID = (e) => {\n    this.setState({currentSR_task: e.target.value})\n  }\n  handleCurrentCtr = (e) => {\n    this.setState({currentSR_contractor: e.target.value})\n  }\n  async handleAddSR(e) {\n    let addSR = {sr_name: this.state.currentSR_name,\n     sr_task: this.state.currentSR_task,\n     sr_contractor: this.state.currentSR_contractor\n    }\n    this.addSR(addSR)\n    const newList = await this.getSRList();\n    this.setState({listSR: newList})\n  }\n  addSR = (body) => {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n    };\n    fetch('http://localhost:3001/add_service_request', requestOptions)\n        .then(response => response.json())\n        .then(response => alert(response.message) )\n\n  }\n  handleDeleteSR = (e) => {\n    let deleteSR = {\n      id: e.target.value\n    }\n  }\n  deleteSR = (body) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n  };\n  fetch('http://localhost:3001/delete_service_request', requestOptions)\n      .then(response => response.json())\n      .then(response => alert(response.message))\n  }\n  render(){\n    return (\n      <div>\n        <h1>Service Requests Service </h1>\n        <AddSR handleCurrentSRName = {this.handleCurrentSRName} handleCurrentTaskID = {this.handleCurrentTaskID} handleCurrentCtr = {this.handleCurrentCtr} handleAddSR = {this.handleAddSR.bind(this)}/>\n        <ListSR listSR = {this.state.listSR} handleDeleteSR={this.handleDeleteSR}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}