{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/petervayda/Documents/proj_galvanize/maintain_yo_self/service_request_service/sr_client3/src/ListSR.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\"; //import EditTodo from \"./EditTodo\";\n\nconst ListSR = () => {\n  _s();\n\n  const [serviceRequests, setServiceRequests] = useState([]); //delete todo function\n\n  const deleteSR = async id => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\"\n      });\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getSR = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json();\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getSR();\n  }, []);\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contractor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditTodo, {\n              todo: todo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTodo(todo.todo_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, todo.todo_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListSR, \"eGtLEhOPLncvmTWHTfeXGJc09p0=\");\n\n_c = ListSR;\nexport default ListSR;\n/*\nfunction ListSR(props){\n    \n    var displaySR = props.listSR.map(each => {\n    return (<tr key= {each.id}>\n             <td>{each.id}</td>\n             <td>{each.sr_name}</td> \n             <td>{each.sr_task}</td>\n             <td>{each.sr_contractor}</td>\n             <td><button onClick={props.handleDeleteSR} value={each.id}>Delete</button></td> \n          </tr>\n    )})\n    return(\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>id</th>\n                        <th>name</th>\n                        <th>task</th>\n                        <th>ctr</th>\n                        <th>Delete</th>\n                    </tr>\n\n                </thead>\n                <tbody>\n                    {displaySR}\n                </tbody>\n            </table>\n            \n        </div>\n        \n    )\n}\nexport default ListSR;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"ListSR\");","map":{"version":3,"sources":["/Users/petervayda/Documents/proj_galvanize/maintain_yo_self/service_request_service/sr_client3/src/ListSR.jsx"],"names":["React","Fragment","useEffect","useState","ListSR","serviceRequests","setServiceRequests","deleteSR","id","deleteTodo","fetch","method","setTodos","todos","filter","todo","todo_id","err","console","error","message","getSR","response","jsonData","json","log","map","description"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\n\n//import EditTodo from \"./EditTodo\";\n\nconst ListSR = () => {\n  const [serviceRequests, setServiceRequests] = useState([]);\n\n  //delete todo function\n\n  const deleteSR = async id => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\"\n      });\n\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getSR = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json();\n\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getSR();\n  }, []);\n\n  console.log(todos);\n\n  return (\n    <Fragment>\n      {\" \"}\n      <table class=\"table mt-5 text-center\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Contractor</th>\n            <th>Task</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/*<tr>\n            <td>John</td>\n            <td>Doe</td>\n            <td>john@example.com</td>\n          </tr> */}\n          {todos.map(todo => (\n            <tr key={todo.todo_id}>\n              <td>{todo.description}</td>\n              <td>\n                <EditTodo todo={todo} />\n              </td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => deleteTodo(todo.todo_id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default ListSR;\n\n\n\n\n\n/*\nfunction ListSR(props){\n    \n    var displaySR = props.listSR.map(each => {\n    return (<tr key= {each.id}>\n             <td>{each.id}</td>\n             <td>{each.sr_name}</td> \n             <td>{each.sr_task}</td>\n             <td>{each.sr_contractor}</td>\n             <td><button onClick={props.handleDeleteSR} value={each.id}>Delete</button></td> \n          </tr>\n    )})\n    return(\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>id</th>\n                        <th>name</th>\n                        <th>task</th>\n                        <th>ctr</th>\n                        <th>Delete</th>\n                    </tr>\n\n                </thead>\n                <tbody>\n                    {displaySR}\n                </tbody>\n            </table>\n            \n        </div>\n        \n    )\n}\nexport default ListSR;\n*/"]},"metadata":{},"sourceType":"module"}