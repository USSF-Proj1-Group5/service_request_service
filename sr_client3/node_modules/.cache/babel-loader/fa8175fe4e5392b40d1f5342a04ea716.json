{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/src/app/src/App.js\";\nimport React, { useEffect } from 'react';\nimport AddSR from './AddSR';\nimport ListSR from './ListSR';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCurrentSRName = e => {\n      this.setState({\n        currentSR_name: e.target.value\n      });\n    };\n\n    this.handleCurrentTaskID = e => {\n      this.setState({\n        currentSR_task: e.target.value\n      });\n    };\n\n    this.handleCurrentCtr = e => {\n      this.setState({\n        currentSR_contractor: e.target.value\n      });\n    };\n\n    this.handleAddSR = async e => {\n      let addSR = {\n        sr_name: this.state.currentSR_name,\n        sr_task: this.state.currentSR_task,\n        sr_contractor: this.state.currentSR_contractor\n      };\n      this.addSR(addSR); // const newList = await this.getSRList();\n      // this.setState({listSR: newList})\n    };\n\n    this.addSR = async body => {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      };\n      await fetch(`${this.state.urlAPI}/add_service_request`, requestOptions).then(response => response.json()).then(response => alert(response.message));\n    };\n\n    this.handleDeleteSR = async e => {\n      let deleteSR = {\n        id: e.target.value\n      };\n      this.deleteSR(deleteSR); // const newList = await this.getSRList();\n      // this.setState({listSR: newList})\n    };\n\n    this.deleteSR = async body => {\n      const requestOptions = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      };\n      await fetch(`${this.state.urlAPI}/delete_service_request`, requestOptions).then(response => response.json()).then(response => alert(response.message));\n    };\n\n    this.state = {\n      currentSR_name: '',\n      currentSR_task: '',\n      currentSR_contractor: '',\n      listSR: [],\n      urlAPI: 'http://localhost:3001'\n    };\n  }\n\n  async componentDidMount() {\n    const originalSRList = await this.getSRList();\n    this.setState({\n      listSR: this.state.listSR.concat(originalSRList)\n    });\n  }\n\n  async componentDidUpdate() {\n    const updateSRList = await this.getSRList();\n    this.setState({\n      listSR: updateSRList\n    });\n  }\n\n  async getSRList() {\n    const response = await fetch(`${this.state.urlAPI}/service_requests`);\n    const json = await response.json();\n    return json;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Service Requests Service \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddSR, {\n        handleCurrentSRName: this.handleCurrentSRName,\n        handleCurrentTaskID: this.handleCurrentTaskID,\n        handleCurrentCtr: this.handleCurrentCtr,\n        handleAddSR: this.handleAddSR.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListSR, {\n        listSR: this.state.listSR,\n        handleDeleteSR: this.handleDeleteSR.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/src/app/src/App.js"],"names":["React","useEffect","AddSR","ListSR","App","Component","constructor","props","handleCurrentSRName","e","setState","currentSR_name","target","value","handleCurrentTaskID","currentSR_task","handleCurrentCtr","currentSR_contractor","handleAddSR","addSR","sr_name","state","sr_task","sr_contractor","body","requestOptions","method","headers","JSON","stringify","fetch","urlAPI","then","response","json","alert","message","handleDeleteSR","deleteSR","id","listSR","componentDidMount","originalSRList","getSRList","concat","componentDidUpdate","updateSRList","render","bind"],"mappings":"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","sourcesContent":["import React,  {useEffect }from 'react'\nimport AddSR from './AddSR'\nimport ListSR from './ListSR'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      currentSR_name: '',\n      currentSR_task: '',\n      currentSR_contractor: '',\n      listSR: [],\n      urlAPI: 'http://localhost:3001'\n    }\n  }\n  \n\n  async componentDidMount() {\n    const originalSRList = await this.getSRList();\n    this.setState({ listSR: this.state.listSR.concat(originalSRList) });\n}\n  async componentDidUpdate() {\n    const updateSRList = await this.getSRList();\n    this.setState({ listSR: updateSRList });\n  }\n  async getSRList() {\n    const response = await fetch(`${this.state.urlAPI}/service_requests`);\n    const json = await response.json();\n    return json;\n  }\n  \n  handleCurrentSRName = (e) => {\n    this.setState({currentSR_name: e.target.value})\n  }\n  handleCurrentTaskID = (e) => {\n    this.setState({currentSR_task: e.target.value})\n  }\n  handleCurrentCtr = (e) => {\n    this.setState({currentSR_contractor: e.target.value})\n  }\n  handleAddSR = async (e) => {\n    let addSR = {sr_name: this.state.currentSR_name,\n     sr_task: this.state.currentSR_task,\n     sr_contractor: this.state.currentSR_contractor\n    }\n    this.addSR(addSR)\n    // const newList = await this.getSRList();\n    // this.setState({listSR: newList})\n  }\n  addSR = async (body) => {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n    };\n    await fetch(`${this.state.urlAPI}/add_service_request`, requestOptions)\n        .then(response => response.json())\n        .then(response => alert(response.message))\n\n  }\n  handleDeleteSR = async (e) => {\n    let deleteSR = {\n      id: e.target.value\n    }\n    this.deleteSR(deleteSR);\n    // const newList = await this.getSRList();\n    // this.setState({listSR: newList})\n  }\n  deleteSR = async (body) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n  };\n    await fetch(`${this.state.urlAPI}/delete_service_request`, requestOptions)\n      .then(response => response.json())\n      .then(response => alert(response.message))\n  }\n  render(){\n    return (\n      <div>\n        <h1>Service Requests Service </h1>\n        <AddSR handleCurrentSRName = {this.handleCurrentSRName} handleCurrentTaskID = {this.handleCurrentTaskID} handleCurrentCtr = {this.handleCurrentCtr} handleAddSR = {this.handleAddSR.bind(this)}/>\n        <ListSR listSR = {this.state.listSR} handleDeleteSR={this.handleDeleteSR.bind(this)}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}