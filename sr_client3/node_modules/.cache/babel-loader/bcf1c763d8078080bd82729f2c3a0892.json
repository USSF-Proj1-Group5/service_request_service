{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/src/app/src/App.js\";\nimport React from 'react';\nimport AddSR from './AddSR';\nimport ListSR from './ListSR';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCurrentSRName = e => {\n      this.setState({\n        currentSR_name: e.target.value\n      });\n    };\n\n    this.handleCurrentTaskID = e => {\n      this.setState({\n        currentSR_task: e.target.value\n      });\n    };\n\n    this.handleCurrentCtr = e => {\n      this.setState({\n        currentSR_contractor: e.target.value\n      });\n    };\n\n    this.state = {\n      currentSR_name: '',\n      currentSR_task: '',\n      currentSR_contractor: '',\n      listSR: []\n    };\n  }\n\n  async componentDidMount() {\n    const originalSRList = await this.getSRList();\n    console.log(typeof originalSRList);\n    this.setState({\n      listSR: this.state.listSR.concat(originalSRList)\n    });\n  }\n\n  async getSRList() {\n    const response = await fetch('http://localhost:3001/service_requests');\n    const json = await response.json();\n    console.log(json);\n    return json;\n  }\n\n  async handleAddSR(e) {\n    let addSR = {\n      sr_name: this.state.currentSR_name,\n      sr_task: this.state.currentSR_task,\n      sr_contractor: this.state.currentSR_contractor\n    };\n    this.addSR(addSR); //const newList = await this.getSRList();\n    //this.setState({listSR: newList})\n  }\n\n  async addSR(body) {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch('http://localhost:3001/add_service_request', requestOptions).then(response => response.json()).then(response => {\n      alert(response.message);\n      this.setState({\n        listSR: this.getSRList()\n      });\n    });\n  }\n\n  async handleDeleteSR(e) {\n    let deleteSR = {\n      id: e.target.value\n    };\n    this.deleteSR(deleteSR);\n    const newList = await this.getSRList();\n    this.setState({\n      listSR: newList\n    });\n  }\n\n  async deleteSR(body) {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch('http://localhost:3001/delete_service_request', requestOptions).then(response => response.json()).then(response => alert(response.message));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Service Requests Service \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddSR, {\n        handleCurrentSRName: this.handleCurrentSRName,\n        handleCurrentTaskID: this.handleCurrentTaskID,\n        handleCurrentCtr: this.handleCurrentCtr,\n        handleAddSR: this.handleAddSR.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListSR, {\n        listSR: this.state.listSR,\n        handleDeleteSR: this.handleDeleteSR.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/src/app/src/App.js"],"names":["React","AddSR","ListSR","App","Component","constructor","props","handleCurrentSRName","e","setState","currentSR_name","target","value","handleCurrentTaskID","currentSR_task","handleCurrentCtr","currentSR_contractor","state","listSR","componentDidMount","originalSRList","getSRList","console","log","concat","response","fetch","json","handleAddSR","addSR","sr_name","sr_task","sr_contractor","body","requestOptions","method","headers","JSON","stringify","then","alert","message","handleDeleteSR","deleteSR","id","newList","render","bind"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AddSR from './AddSR'\nimport ListSR from './ListSR'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      currentSR_name: '',\n      currentSR_task: '',\n      currentSR_contractor: '',\n      listSR: []\n    }\n  }\n\n  async componentDidMount() {\n    const originalSRList = await this.getSRList();\n    console.log(typeof originalSRList)\n    this.setState({ listSR: this.state.listSR.concat(originalSRList) });\n\n}\n  async getSRList() {\n    const response = await fetch('http://localhost:3001/service_requests');\n    const json = await response.json();\n    console.log(json)\n    return json;\n  }\n  \n  handleCurrentSRName = (e) => {\n    this.setState({currentSR_name: e.target.value})\n  }\n  handleCurrentTaskID = (e) => {\n    this.setState({currentSR_task: e.target.value})\n  }\n  handleCurrentCtr = (e) => {\n    this.setState({currentSR_contractor: e.target.value})\n  }\n  async handleAddSR(e) {\n    let addSR = {sr_name: this.state.currentSR_name,\n     sr_task: this.state.currentSR_task,\n     sr_contractor: this.state.currentSR_contractor\n    }\n    this.addSR(addSR)\n    //const newList = await this.getSRList();\n    //this.setState({listSR: newList})\n  }\n  async addSR(body) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n    };\n    await fetch('http://localhost:3001/add_service_request', requestOptions)\n        .then(response => response.json())\n        .then(response => {\n          alert(response.message)\n          this.setState({listSR: this.getSRList()})\n          })\n\n  }\n  async handleDeleteSR (e) {\n    let deleteSR = {\n      id: e.target.value\n    }\n    this.deleteSR(deleteSR);\n    const newList = await this.getSRList();\n    this.setState({listSR: newList})\n  }\n  async deleteSR(body) {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n  };\n    await fetch('http://localhost:3001/delete_service_request', requestOptions)\n      .then(response => response.json())\n      .then(response => alert(response.message))\n  }\n  render(){\n    return (\n      <div>\n        <h1>Service Requests Service </h1>\n        <AddSR handleCurrentSRName = {this.handleCurrentSRName} handleCurrentTaskID = {this.handleCurrentTaskID} handleCurrentCtr = {this.handleCurrentCtr} handleAddSR = {this.handleAddSR.bind(this)}/>\n        <ListSR listSR = {this.state.listSR} handleDeleteSR={this.handleDeleteSR.bind(this)}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}